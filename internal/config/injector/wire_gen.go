// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/trend-me/ai-requester/internal/config/connections"
	"github.com/trend-me/ai-requester/internal/config/properties"
	"github.com/trend-me/ai-requester/internal/delivery/controllers"
	"github.com/trend-me/ai-requester/internal/domain/factories"
	"github.com/trend-me/ai-requester/internal/domain/interfaces"
	"github.com/trend-me/ai-requester/internal/domain/usecases"
	"github.com/trend-me/ai-requester/internal/integration/ai"
	"github.com/trend-me/ai-requester/internal/integration/queue"
	"github.com/trend-me/golang-rabbitmq-lib/rabbitmq"
)

// Injectors from wire.go:

func InitializeQueueAiRequesterConsumer() (interfaces.QueueAiRequesterConsumer, error) {
	connection, err := connections.ConnectQueue()
	if err != nil {
		return nil, err
	}
	connectionAiCallback := NewQueueConnectionAiCallback(connection)
	queueAiCallback := queue.NewAiRequester(connectionAiCallback)
	aiFactory := NewAiFactory()
	useCase := usecases.NewUseCase(queueAiCallback, aiFactory)
	controller := controllers.NewController(useCase)
	connectionAiRequesterConsumer := NewQueueConnectionAiRequesterConsumer(connection)
	queueAiRequesterConsumer := NewQueueAiRequesterConsumer(controller, connectionAiRequesterConsumer)
	return queueAiRequesterConsumer, nil
}

// wire.go:

func NewQueueConnectionAiRequesterConsumer(connection *rabbitmq.Connection) queue.ConnectionAiRequesterConsumer {
	return rabbitmq.NewQueue(
		connection, properties.QueueNameAiPromptBuilder, rabbitmq.ContentTypeJson, properties.CreateQueueIfNX(), true,
		true,
	)
}

func NewQueueConnectionAiCallback(connection *rabbitmq.Connection) queue.ConnectionAiCallback {
	return rabbitmq.NewQueue(
		connection, properties.QueueAiRequester, rabbitmq.ContentTypeJson, properties.CreateQueueIfNX(), true,
		true,
	)
}

func NewQueueAiRequesterConsumer(controller interfaces.Controller, connectionAiPromptBuilderConsumer queue.ConnectionAiRequesterConsumer) interfaces.QueueAiRequesterConsumer {
	return queue.NewAiPromptBuilderConsumer(connectionAiPromptBuilderConsumer, controller)
}

func NewAiFactory() *factories.AiFactory {
	return &factories.AiFactory{
		Gemini: ai.NewGemini(),
	}
}
